<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<display-name>evolve</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	<!-- Spring ApplicationContext配置文件的路径,可使用通配符,多个路径用,号分隔 此参数用于后面的Spring Context 
		Loader -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/context/context.xml</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:context/log/log4j.xml</param-value>
	</context-param>
	<!-- 编码filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- multipart文件上传 -->
	<filter>
		<filter-name>multiPartFilter</filter-name>
		<filter-class>
			org.springframework.web.multipart.support.MultipartFilter
		</filter-class>
		<init-param>
			<param-name>multipartResolverBeanName</param-name>
			<param-value>multipartBean</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>multiPartFilter</filter-name>
		<servlet-name>webroot</servlet-name>
	</filter-mapping>
	<!-- 支持REST方式的PUT和DELETE -->
	<filter>
		<filter-name>httpMethodFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.HiddenHttpMethodFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>httpMethodFilter</filter-name>
		<servlet-name>webroot</servlet-name>
	</filter-mapping>

	<!-- 日志 -->
	<listener>
		<listener-class>
			org.springframework.web.util.Log4jConfigListener
		</listener-class>
	</listener>
	<!--Spring ApplicationContext 载入 -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>
			org.springframework.web.util.IntrospectorCleanupListener
		</listener-class>
	</listener>
	<!-- Spring前端控制器 -->
	<servlet>
		<servlet-name>webroot</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/context/servlet/servlet.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>webroot</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>resin-file</servlet-name>
		<url-pattern>/script/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>resin-file</servlet-name>
		<url-pattern>/image/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>resin-file</servlet-name>
		<url-pattern>/style/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>resin-file</servlet-name>
		<url-pattern>/html/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>resin-file</servlet-name>
		<url-pattern>/index.html</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>resin-file</servlet-name>
		<url-pattern>/robots.txt</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>resin-file</servlet-name>
		<url-pattern>/favicon.ico</url-pattern>
	</servlet-mapping>
	
</web-app>