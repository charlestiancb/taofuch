<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<http path-type="regex" use-expressions="true"
		entry-point-ref="authenticationProcessingFilterEntryPoint"
		security-context-repository-ref="nullSecurityContextRepository"
		create-session="never">
		<!-- 联系信 -->
		<intercept-url pattern="^/vo/inbox.*/reply.*$" access="hasRole('管理员')" />
		<anonymous enabled="false" />
		<access-denied-handler error-page="/error/denied" />

		<custom-filter ref="logoutFilter" position="LOGOUT_FILTER" />
		<custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" />
		<custom-filter ref="rememberMeFilter" position="REMEMBER_ME_FILTER" />
		<custom-filter ref="anonymousFilter" position="ANONYMOUS_FILTER" />
	</http>

	<beans:bean id="authenticationProcessingFilterEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/session/new" />
	</beans:bean>
	<beans:bean id="nullSecurityContextRepository"
		class="org.springframework.security.web.context.NullSecurityContextRepository" />

	<!-- 处理退出的filter -->
	<beans:bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg name="logoutSuccessHandler">
			<beans:bean
				class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
				<beans:property name="defaultTargetUrl" value="/" />
				<beans:property name="targetUrlParameter" value="redirect_url" />
			</beans:bean>
		</beans:constructor-arg>
		<beans:constructor-arg name="handlers">
			<beans:list>
				<beans:bean
					class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
				<beans:ref bean="rememberMeServices" />
			</beans:list>
		</beans:constructor-arg>
		<beans:property name="filterProcessesUrl" value="/session" />
	</beans:bean>

	<!-- 处理登录的filter配置 -->
	<beans:bean id="loginFilter"
		class="com.tfc.evolve.spring.security.filter.UsernamePasswordAuthenticationFilter">
		<beans:property name="filterProcessesUrl" value="/session" />
		<beans:property name="authenticationSuccessHandler"
			ref="loginSuccessHandler" />
		<beans:property name="authenticationFailureHandler"
			ref="loginFailureHandler" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="rememberMeServices" ref="rememberMeServices" />
	</beans:bean>
	<beans:bean id="loginSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/" />
	</beans:bean>
	<beans:bean id="loginFailureHandler"
		class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/session/new" />
		<beans:property name="exceptionMappings">
			<beans:map key-type="java.lang.String" value-type="java.lang.String">
				<beans:entry key="com.tfc.evolve.service.exception.BusinessException"
					value="/error/fatal"></beans:entry>
			</beans:map>
		</beans:property>
	</beans:bean>

	<!-- 处理cookiemap生成权限对象的filter -->
	<beans:bean id="rememberMeFilter"
		class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<beans:property name="rememberMeServices" ref="rememberMeServices" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>
	<beans:bean id="rememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<beans:property name="key" value="evolve" />
		<beans:property name="userDetailsService" ref="userService" />
	</beans:bean>

	<!-- 匿名 -->
	<beans:bean id="anonymousFilter"
		class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
		<beans:property name="key" value="evolve" />
		<beans:property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS" />
	</beans:bean>

	<!-- 用户来源 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userService">
		</authentication-provider>
		<authentication-provider ref="authenticationProvider">
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="authenticationProvider"
		class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
		<beans:constructor-arg value="evolve" />
	</beans:bean>
</beans:beans>